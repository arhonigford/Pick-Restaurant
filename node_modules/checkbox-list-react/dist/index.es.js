import React from 'react';
import propTypes from 'prop-types';
import cn from 'classnames';

var parseList = function parseList(inputs, list) {
  return Object.keys(inputs).reduce(function (acc, key) {
    acc.push({
      label: inputs[key],
      name: key,
      value: key,
      checked: list.includes(key)
    });
    return acc;
  }, []);
};

var parseInputs = function parseInputs(inputs) {
  return inputs.reduce(function (acc, input) {
    if (input.checked) {
      acc.push(input.value);
    }
    return acc;
  }, []);
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = "/* add css styles here (optional) */\n\n.styles_custom-checkbox__MNBbD {\n  font-family: 'Open Sans', sans-serif;\n  font-weight: 600;\n  display: block;\n  position: relative;\n  padding-left: 30px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  font-size: 14px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.styles_custom-checkbox__MNBbD input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n\n.styles_checkmark__1Um8A {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 20px;\n  width: 20px;\n  border: 2px solid #76838f;\n  background-color: transparent;\n}\n\n.styles_custom-checkbox__MNBbD input:checked ~ .styles_checkmark__1Um8A {\n  background-color: #2196F3;\n}\n\n.styles_custom-checkbox__MNBbD:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n.styles_custom-checkbox__MNBbD input:checked ~ .styles_checkmark__1Um8A:after {\n  display: block;\n}\n\n.styles_custom-checkbox__MNBbD .styles_checkmark__1Um8A:after {\n  content: '';\n  position: relative;\n  left: 6px;\n  top: 2px;\n  width: 5px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  display: none;\n}\n";
styleInject(css);

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var CheckBoxes = function (_React$Component) {
  inherits(CheckBoxes, _React$Component);

  function CheckBoxes(props) {
    classCallCheck(this, CheckBoxes);

    var _this = possibleConstructorReturn(this, (CheckBoxes.__proto__ || Object.getPrototypeOf(CheckBoxes)).call(this, props));

    _this.onCheck = function (e) {
      var inputs = _this.state.inputs;
      var _e$target = e.target,
          value = _e$target.value,
          checked = _e$target.checked;


      _this.setState({
        inputs: inputs.map(function (input) {
          return _extends({}, input, {
            checked: input.value === value ? checked : input.checked
          });
        })
      });
    };

    _this.state = {
      inputs: [],
      list: []
    };
    return _this;
  }

  createClass(CheckBoxes, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          inputs = _props.inputs,
          list = _props.list;

      var services = parseList(inputs, list);

      this.setState({
        inputs: services,
        list: list
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(oldProps, oldState) {
      var _this2 = this;

      var inputs = this.state.inputs;

      var newList = parseInputs(inputs);

      if (oldState.inputs !== this.state.inputs) {
        this.setState({ // eslint-disable-line
          inputs: inputs,
          list: newList
        }, function () {
          if (_this2.props.hasOwnProperty('onChange')) {
            _this2.props.onChange({ target: { name: _this2.props.name, value: newList } });
          }
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var inputs = this.state.inputs;
      var className = this.props.className;


      return React.createElement(
        'div',
        { className: cn('-select-list', className) },
        inputs.map(function (item, i) {
          return React.createElement(
            'label',
            { key: i, className: 'custom-checkbox' },
            item.label,
            React.createElement('input', {
              type: 'checkbox',
              name: item.name,
              onChange: _this3.onCheck,
              checked: item.checked,
              value: item.value
            }),
            React.createElement('span', { className: 'checkmark' })
          );
        })
      );
    }
  }]);
  return CheckBoxes;
}(React.Component);

CheckBoxes.propTypes = {
  list: propTypes.array,
  className: propTypes.string,
  inputs: propTypes.object,
  onChange: propTypes.func,
  name: propTypes.string
};

export default CheckBoxes;
//# sourceMappingURL=index.es.js.map
